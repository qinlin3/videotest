2019-3-8
创建Servlet
1.在src目录中创建Servlet
包：cn.com.scitc.servlet
类：HomeServlet
类的完整名
2.jstl生成代码，标准标签库
core核心
1.把mysql安装成服务
2.mysqld --verbose --help | more
3.mysqld --initialize-insecure
E:\mysql\mysql-8.0.15-winx64\bin加入环境变量path
mysql -uroot -p
-u跟用户名，-p后可以直接跟密码，如果不写，表示可以直接登陆。
show databases;
create database soft1701 charset utf8;
create user 'user1'@'localhost' identified by '123';
grant all on soft1701 .* to 'user1'@'localhost';
mysql -uuser1 -p123 数据库名
show tables ;
create table user(
  id char(10) primary key ,
  name varchar(20),
  age char(10),
  sex varchar(20)
);
insert into user(id, name, age, sex) values
('1001','caidao','21','男');
select * from user;
url=jdbc:mysql://localhost:3306/soft1703?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT
driver=com.mysql.cj.jdbc.Driver
user=user3
password=123
resourse装配置文件，main装主要代码，test装测试代码
porm点右键reporm
select user,host from mysql.user;
drop user 'user1'@'localhost';
flush privileges;
debug=false

spring.datasource.url= jdbc:mysql://localhost/student?serverTimezone=GMT%2B8
spring.datasource.username=student
spring.datasource.password=student123

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

<div th:fragment="head">
        <script th:src="@{/jquery/jquery-3.3.1.min.js}"></script>
        <link rel="stylesheet" th:href="@{/bootstrap-3.3.7-dist/css/bootstrap.css}">
        <script th:src="@{/bootstrap-3.3.7-dist/js/bootstrap.min.js}"></script>
        <link th:href="@{/bootstrap-3.3.7-dist/css/bootstrap-theme.css}">
    </div>
pFe0veifJPEp
C9eEPHnCcUDG

在连接字符串后面加上?serverTimezone=UTC
其中UTC是统一标准世界时间。
完整的连接字符串示例：jdbc:mysql://localhost:3306/test?serverTimezone=UTC
或者还有另一种选择：jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8，这个是解决中文乱码输入问题，当然也可以和上面的一起结合：jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
git pull --rebase origin master
select * from user;
insert into user (username, email, password, state, code)
values ('zql','742715157@qq.com',1024,1,1);
delete from user where username = 'zql';
create table user(
	id int(11) primary key auto_increment comment 'id',                 
                 name varchar(20),
                 password varchar(20),
	credit  int(11)
);
insert into user(id, name, password,credit) VALUES
(1,'zql','1024',100);
delete from user where id = 1
select * from user;
create table t1 (id int auto_increment Primary key,sid int);
 <a th:href="@{student/delete(id=${list.id})}">
                            <span class="glyphicon glyphicon-remove"></span>
                        </a>


create table proOrder
(
    id               int(10) not null auto_increment comment '订单',
    name                 varchar(20) not null comment '用户姓名',
    product                 varchar(20) not null comment '产品名称',
    price                  varchar(20) not null comment '产品价格',
    date                   datetime not null comment '日期',
    primary key (id)
);


truncate table proorder;

1. session.invalidate();//移出所有数据
2. session.Abandon()；//给session赋空值
3. session.removeAttribute("user");//根据参数清除对应的值

@Id
    @Column(name = "id", nullable = false)
    @GeneratedValue(strategy=GenerationType.IDENTITY)